{"version":3,"file":"js/app.6dd23c88.js","mappings":"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","sources":["webpack://tic-tac-toe-ui/./src/App.vue","webpack://tic-tac-toe-ui/./src/App.vue?7ccd","webpack://tic-tac-toe-ui/./src/views/HomeView.vue","webpack://tic-tac-toe-ui/./src/constants.mjs","webpack://tic-tac-toe-ui/./src/socket.js","webpack://tic-tac-toe-ui/./src/network.mjs","webpack://tic-tac-toe-ui/./src/views/HomeView.vue?1da1","webpack://tic-tac-toe-ui/./src/views/GameView.vue","webpack://tic-tac-toe-ui/./src/components/Game/MetaBoard.vue","webpack://tic-tac-toe-ui/./src/components/Game/GameBoard.vue","webpack://tic-tac-toe-ui/./src/components/Game/GameTile.vue","webpack://tic-tac-toe-ui/./src/components/Game/GameTile.vue?4b3c","webpack://tic-tac-toe-ui/./src/components/Game/GameBoard.vue?3630","webpack://tic-tac-toe-ui/./src/components/Game/MetaBoard.vue?09e0","webpack://tic-tac-toe-ui/./src/components/connectDisplay.vue","webpack://tic-tac-toe-ui/./src/components/connectDisplay.vue?4d77","webpack://tic-tac-toe-ui/./src/views/GameView.vue?3e8c","webpack://tic-tac-toe-ui/./src/views/AboutView.vue","webpack://tic-tac-toe-ui/./src/views/AboutView.vue?d56f","webpack://tic-tac-toe-ui/./src/router/router.js","webpack://tic-tac-toe-ui/./src/main.js","webpack://tic-tac-toe-ui/webpack/bootstrap","webpack://tic-tac-toe-ui/webpack/runtime/chunk loaded","webpack://tic-tac-toe-ui/webpack/runtime/define property getters","webpack://tic-tac-toe-ui/webpack/runtime/global","webpack://tic-tac-toe-ui/webpack/runtime/hasOwnProperty shorthand","webpack://tic-tac-toe-ui/webpack/runtime/jsonp chunk loading","webpack://tic-tac-toe-ui/webpack/startup"],"sourcesContent":["<template>\n  <router-view/>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nhtml, body, #app {\n  height: 100%;\n}\n\nbody {\n  margin: 0px;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=21047447\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=21047447&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <!-- <p>Current Player One Username: {{ playerOneName }}</p>\r\n    <p>Current Player One Username: {{ playerTwoName }}</p>\r\n    <div class=\"name-controls\">\r\n        <form action=\"\" @submit.prevent=\"setName()\">\r\n          <button type=\"button\">Change</button>\r\n          <p>Current Player One Username: {{ playerOneName }}</p>\r\n          <input type=\"text\" v-model=\"playerTwoName\">\r\n        </form>\r\n      </div> -->\r\n\r\n  <!-- Refactor the true and false for setNewName, very inflexible -->\r\n  <!-- goal is to have the input and p all aligned on top of each other with position\r\n        then when they click the change button, z index changes, to bring input to the top\r\n        the button changes to Set Name, clicking on that will bring the paragraph to the top -->\r\n  <!-- maybe that's too fancy, just a regular input will be good enough , I'll save the \r\n          above idea for another time lmao-->\r\n\r\n  <div id=\"home-view\">\r\n    <nav>\r\n      <router-link to=\"/\">Home</router-link> |\r\n      <router-link to=\"/about\">About</router-link>\r\n    </nav>\r\n    <div class=\"names\">\r\n      <div class=\"name-display\">\r\n        <form method=\"post\" @submit.prevent=\"login\">\r\n          <input type=\"text\" v-model=\"playerOneName\" name=\"player-one-name\" \r\n            placeholder=\"Name\" autocomplete=\"off\"\r\n            class=\"name-input\">\r\n            <input type=\"submit\" value=\"\" class=\"name-submit\">\r\n        </form>\r\n      </div>\r\n\r\n      <!-- <div class=\"name-display\">\r\n        <input type=\"text\" v-model=\"playerTwoName\" name=\"player-two-name\" placeholder=\"player two name\"\r\n          class=\"name-input\" />\r\n      </div> -->\r\n      <RouterLink to=\"/game\">Go to Game</RouterLink>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- <div class=\"name-controls\">\r\n        <form action=\"\" @submit.prevent=\"setName()\">\r\n            <div class=\"\">\r\n                <button type=\"button\">Change</button>\r\n                <p>Current Player Two Username: {{ playerTwoName }}</p>\r\n                <input type=\"text\" v-model=\"playerOneName\">\r\n            </div>\r\n        </form>\r\n    </div> -->\r\n\r\n  <!-- overlay  -->\r\n\r\n  <!-- \r\n    <form action=\"\" v-if=\"newName\" @submit.prevent=\"setName()\">\r\n        <p>Player One Username: {{ playerOneName }} <input type=\"text\" v-model=\"playerOneName\" /></p>\r\n        <button type=\"submit\">\r\n            Submit\r\n        </button>\r\n    </form>\r\n    \r\n    <form action=\"\" v-if=\"newName\" @submit.prevent=\"setName()\">\r\n        <p>Player Two Username: {{ playerTwoName }} <input type=\"text\" v-model=\"playerTwoName\" /></p>\r\n        <button type=\"submit\">\r\n            Submit\r\n        </button>\r\n    </form> -->\r\n</template>\r\n\r\n<script>\r\nimport { PLAYER_ONE_STORAGE_KEY, \r\n  // PLAYER_TWO_STORAGE_KEY \r\n} \r\nfrom \"../constants.mjs\";\r\n\r\nimport { postLogin } from \"@/network.mjs\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      playerOneName: \"\",\r\n      // playerTwoName: \"\",\r\n      newName: false,\r\n      newPlayerOneName: false,\r\n      // newPlayerTwoName: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // setName(isPlayerOne) {\r\n    //     if (isPlayerOne) {\r\n    //         this.newPlayerOneName = true;\r\n    //         sessionStorage.setItem(\"player one\", this.playerOneName);\r\n    //         console.log(\"session storage, player one: \" + sessionStorage.getItem(\"player one\"));\r\n    //     } else {\r\n    //         this.newPlayerTwoName = true;\r\n    //         sessionStorage.setItem(\"player two\", this.playerTwoName);\r\n    //         console.log(\"session storage, player two: \" + sessionStorage.getItem(\"player two\"));\r\n    //     }\r\n    // }\r\n    login() {\r\n      console.log(\"calling post login. player one name \" + this.playerOneName); \r\n      postLogin(this.playerOneName);\r\n    }\r\n  },\r\n  mounted() {\r\n    const previousPlayerOneName = sessionStorage.getItem(PLAYER_ONE_STORAGE_KEY);\r\n    // const previousPlayerTwoName = sessionStorage.getItem(PLAYER_TWO_STORAGE_KEY);\r\n\r\n    if (previousPlayerOneName !== null) {\r\n      this.playerOneName = previousPlayerOneName;\r\n    }\r\n    // if (previousPlayerTwoName !== null) {\r\n    //   this.playerTwoName = previousPlayerTwoName;\r\n    // }\r\n  }, \r\n  unmounted() {\r\n    sessionStorage.setItem(PLAYER_ONE_STORAGE_KEY, this.playerOneName);\r\n    // sessionStorage.setItem(PLAYER_TWO_STORAGE_KEY, this.playerTwoName);\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n#home-view {\r\n  height: 100%;\r\n}\r\n\r\n.names {\r\n  height: 80%;\r\n  display: grid;\r\n  grid-template-rows: repeat(1, 1fr);\r\n  grid-template-columns: repeat(1, 1fr);\r\n  place-items: center;\r\n}\r\n\r\n.name-display {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  width: 50%;\r\n  height: 30%;\r\n}\r\n\r\n.name-input {\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 60%;\r\n  font-size: 5vw;\r\n}\r\n\r\n.name-submit {\r\n  display: none;\r\n}\r\n\r\nnav {\r\n  padding: 30px;\r\n}\r\n\r\nnav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\nnav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n</style>","const PLAYER_ONE_STORAGE_KEY = \"player one\";\r\nconst PLAYER_TWO_STORAGE_KEY = \"player two\";\r\n\r\nconst NUM_BOARDS = 9;\r\nconst NUM_TILES_PER_BOARD = 9;\r\n\r\nconst CONTINUE = \"continue\";\r\nconst DRAW = \"draw\";\r\n\r\n// timer consts\r\nconst PLAYER_START_TIME = 10;\r\n\r\n// networking constants\r\nconst INITIALIZE = \"initialize\";\r\nconst NEW_MOVE = \"new move\";\r\nconst WAIT_FOR_OTHER_PLAYER = \"wait\";\r\nconst RESETTED = \"resetted\";\r\nconst RESET = \"reset\";\r\n\r\nconst GAME_OVER = \"game over\";\r\n\r\nconst GAME_ROOM = \"game room\";\r\nconst SAVED_STATE = \"saved state\"; \r\n\r\n\r\nconst WINNER = \"winner\";\r\nconst LOSER = \"loser\";\r\n\r\n\r\nexport {\r\n  PLAYER_ONE_STORAGE_KEY, PLAYER_TWO_STORAGE_KEY, NUM_BOARDS,\r\n  NUM_TILES_PER_BOARD, CONTINUE, DRAW, PLAYER_START_TIME, INITIALIZE,\r\n  NEW_MOVE, WINNER, LOSER, RESET, WAIT_FOR_OTHER_PLAYER, RESETTED, GAME_OVER, \r\n  GAME_ROOM, SAVED_STATE\r\n};","import { PLAYER_ONE_STORAGE_KEY, PLAYER_TWO_STORAGE_KEY, NUM_TILES_PER_BOARD, INITIALIZE, NEW_MOVE }\r\n  from \"@/constants.mjs\";\r\n\r\nimport { reactive } from \"vue\";\r\nimport { io } from \"../node_modules/socket.io/client-dist/socket.io.js\";\r\n\r\n// export const URL = \"http://localhost:3000\";\r\n// url for server backend \r\nexport const URL = \"https://brick-amenable-cadet.glitch.me\"; \r\n\r\nexport const state = reactive({\r\n  isConnected: false,\r\n  errorMessage: null,\r\n  nextMove: {\r\n    player: PLAYER_ONE_STORAGE_KEY,\r\n    tileId: -1,\r\n    gameStatus: null\r\n  },\r\n});\r\n\r\n/**\r\n * so two clients join, both clients will be initialized \r\n * with their respective statuses as players (e.g. one will be player one\r\n * and the other will be player two (socket.emit(\"initialize\")))\r\n * \r\n * then the client as player one will play their move (handling client side\r\n * logic will be talked about later)\r\n * when p1 plays their move, receive and send this to gameModel, \r\n * where it will update the model, and sent the new move to the other player, \r\n * then the other player will play their move, send thier stuff etc.\r\n * \r\n * for client side logic, client will play their move, set all enable status to \r\n * false, wait for a new move, once new moves arrives, update next board id with \r\n * tile id, allow player to play their move, send back to server \r\n * (player key, tileId of Move) then the cycle repeats. \r\n */\r\n\r\nconst socketOptions = {\r\n  autoConnect: false,\r\n};\r\n\r\n// local development \r\nexport const socket = io(URL, socketOptions);\r\n\r\n// production \r\n// export const socket = io(window.location, socketOptions);\r\n\r\nexport function connectSocket() {\r\n  socket.connect();\r\n  console.log(\"Calling connect Socket. connexion status: \" + state.isConnected);\r\n  return state.isConnected;\r\n}\r\n\r\nexport function disconnectSocket() {\r\n  socket.disconnect();\r\n  console.log(\"Disconnecting socket\");\r\n  state.isConnected = false;\r\n  return state.isConnected;\r\n}\r\n\r\nexport function sendMove(playerKey, tileId, boardId) {\r\n  if (state.isConnected || (!state.isConnected && connectSocket())) {\r\n    socket.emit(playerKey, { tileId: tileId, boardId: boardId });\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function initializeClient(metaBoardContext) {\r\n  socket.on(INITIALIZE, initialData => {\r\n    // roomId\r\n    const { playerKey, playerSymbol, opponentSymbol, roomId } = initialData;\r\n    console.log(\"initial data: \" + initialData + \" stringified: \" +\r\n      JSON.stringify(initialData));\r\n    metaBoardContext.playerStorageKey = playerKey;\r\n    metaBoardContext.playerSymbol = playerSymbol;\r\n    if (metaBoardContext.playerStorageKey === PLAYER_ONE_STORAGE_KEY) {\r\n      metaBoardContext.opponentKey = PLAYER_TWO_STORAGE_KEY;\r\n    } else {\r\n      metaBoardContext.opponentKey = PLAYER_ONE_STORAGE_KEY;\r\n    }\r\n    metaBoardContext.opponentSymbol = String(opponentSymbol);\r\n    metaBoardContext.isPlayerTurn =\r\n      metaBoardContext.playerStorageKey === PLAYER_ONE_STORAGE_KEY;\r\n    metaBoardContext.setAllBoardEnableStatus(\r\n      metaBoardContext.playerStorageKey === PLAYER_ONE_STORAGE_KEY);\r\n    console.log(\"this player's storage key: \" + \r\n      metaBoardContext.playerStorageKey + \" opponent symbol: \" + opponentSymbol);\r\n\r\n    // roomId, useful for reconnecting back to game \r\n    localStorage.setItem(\"player key\", playerKey);\r\n    localStorage.setItem(\"game room\", roomId);\r\n  });\r\n}\r\n\r\nexport function processNewMove(metaBoardContext) {\r\n  socket.on(NEW_MOVE, moveInfo => {\r\n    console.log(\"client New move received. moveInfo id: \" + moveInfo.moveId);\r\n\r\n    const { moveId, boardId, gameStatus } = moveInfo;\r\n    metaBoardContext.nextBoardToPlay = moveId;\r\n    // this.placeTile(moveId);\r\n    // there should be a more elegant way of doing this, save for later\r\n    // if nextboardtoplay \r\n    metaBoardContext.metaGameState[moveId].isEnabled = true;\r\n    // board will play this move (it's a prop)\r\n    metaBoardContext.opponentMove = { tileId: moveId, boardId: boardId }; \r\n    metaBoardContext.isPlayerTurn = true;\r\n\r\n    metaBoardContext.placeTile({ tileId: moveId, boardId: boardId }, false);\r\n\r\n    // game over\r\n    if (gameStatus !== null) {\r\n      metaBoardContext.setEndGameStatus(gameStatus);\r\n      metaBoardContext.setAllBoardEnableStatus(false);\r\n    }\r\n  });\r\n}\r\n\r\nsocket.on(\"connect_error\", error => {\r\n  state.isConnected = false;\r\n  console.log(\"failed to connect\");\r\n  state.errorMessage = \r\n      `error name: ${error.name}. error message: ${error.message}`;\r\n});\r\n\r\nsocket.on(\"connect\", () => {\r\n  state.isConnected = true;\r\n  console.log(\"client is connected. connexion status: \" + state.isConnected);\r\n\r\n  if (localStorage.getItem(\"game room\") != null) {\r\n    // need to move this socket back into the active game \r\n    // replay all the moves from the server side \r\n    // theoretically, the player storage key shouldn't have changed\r\n    // but very flaky \r\n    const previousPlayerSide = localStorage.getItem(\"player key\");\r\n    const rejoinInfo = {\r\n      playerKey: previousPlayerSide, gameId: localStorage.getItem(\"game room\")\r\n    };\r\n    socket.emit(\"rejoin\", rejoinInfo);\r\n    // socket.on(\"replay\", )\r\n    // to replay the moves, would require the metaboard \r\n    // so would need to do this on mounted \r\n  }\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  state.isConnected = false;\r\n  console.log(\"client has disconnected\");\r\n\r\n  if (localStorage.getItem(\"game room\") != null) {\r\n    localStorage.removeItem(\"game room\");\r\n  }\r\n});\r\n\r\nexport function setNextMoveInfo(boardInfo) {\r\n  if (boardInfo.player !== PLAYER_ONE_STORAGE_KEY || \r\n      boardInfo.player !== PLAYER_TWO_STORAGE_KEY) {\r\n    state.errorMessage = \"NEXT PLAYER KEY DOESN'T EXIST\";\r\n    return;\r\n  }\r\n\r\n  state.nextMove.player = boardInfo.player;\r\n  state.nextMove.gameStatus = boardInfo.gameStatus;\r\n\r\n  if (0 <= boardInfo.moveId && boardInfo.moveId < NUM_TILES_PER_BOARD) {\r\n    state.nextMove.tileId = boardInfo.moveId;\r\n  } else {\r\n    state.errorMessage = \"TILE ID OUT OF BOUNDS\";\r\n  }\r\n\r\n  state.errorMessage = null;\r\n}","import { URL } from \"./socket\"\r\n\r\n\r\nexport function postLogin(username) {\r\n  const loginUrl = URL + \"/login\"; \r\n\r\n  let headers = new Headers(); \r\n\r\n  headers.append(\"Origin\", \"no-cors\");\r\n\r\n  fetch(loginUrl, {\r\n    method: \"POST\", \r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\", \r\n    },\r\n    body: username,\r\n    headers: headers\r\n  })\r\n  .then(response => response.text())\r\n  .then(data => {\r\n    // res.then(data => {\r\n    //   console.log(\"response in text \" + data.text()); \r\n    // })\r\n    console.log(\"response from server \" + data);\r\n  })\r\n  .catch(error => {\r\n    console.log(\"error when posting login error msg: \" + error.message);\r\n  });\r\n\r\n}","import { render } from \"./HomeView.vue?vue&type=template&id=0caaa9d7&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=0caaa9d7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0caaa9d7\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"player-controls\">\r\n    <label for=\"player-one-symbol\">Player One Custom Symbol</label>\r\n    <input type=\"text\" name=\"player-one-symbol\" id=\"player-one-symbol\" \r\n            v-model=\"firstPlayer\">\r\n    <br>\r\n    <label for=\"player-two-symbol\">Player Two Custom Symbol</label>\r\n    <input type=\"text\" name=\"player-two-symbol\" id=\"player-two-symbol\" \r\n            v-model=\"secondPlayer\">\r\n  </div>\r\n\r\n  <div class=\"game\">\r\n    <div v-if=\"winner !== null\" class=\"outcome-display\">\r\n      <p class=\"outcome-text\">\r\n        {{ outcomeText }}\r\n      </p>\r\n      <button type=\"button\" @click=\"resetGame\" class=\"reset-button\">\r\n        Play Again\r\n      </button>\r\n    </div>\r\n\r\n    <p class=\"username\">{{ playerOneName }}</p>\r\n\r\n    <meta-board @game-over=\"gameOver($event)\" @draw=\"handleDraw\" \r\n      @resetted=\"finishReset\" :player-one=\"firstPlayer\"\r\n      :player-two=\"secondPlayer\" :reset-signal=\"resetSignal\" class=\"board\">\r\n    </meta-board>\r\n\r\n    <p class=\"username\">{{ playerTwoName }}</p>\r\n  </div>\r\n\r\n  <div class=\"history\">\r\n    <ul class=\"moves-list\">\r\n\r\n    </ul>\r\n  </div>\r\n\r\n  <connect-display></connect-display>\r\n</template>\r\n\r\n<script>\r\nimport MetaBoard from '@/components/Game/MetaBoard.vue';\r\nimport ConnectDisplay from '@/components/connectDisplay.vue';\r\n\r\nimport { PLAYER_ONE_STORAGE_KEY, PLAYER_TWO_STORAGE_KEY } \r\nfrom \"../constants.mjs\";\r\nimport { connectSocket, disconnectSocket } from '@/socket';\r\n\r\nconst DEFAULT_FIRST_PLAYER = \"X\";\r\nconst DEFAULT_SECOND_PLAYER = \"O\";\r\n\r\n// const URL = \"http://localhost:8080\";\r\n\r\nexport default {\r\n  components: {\r\n    MetaBoard,\r\n    ConnectDisplay,\r\n  },\r\n  data() {\r\n    return {\r\n      winner: null,\r\n      resetSignal: false,\r\n      playerOneName: DEFAULT_FIRST_PLAYER,\r\n      playerTwoName: DEFAULT_SECOND_PLAYER,\r\n      firstPlayer: DEFAULT_FIRST_PLAYER,\r\n      secondPlayer: DEFAULT_SECOND_PLAYER,\r\n      numTiles: 9,\r\n    }\r\n  },\r\n  methods: {\r\n    gameOver(winningPlayer) {\r\n      this.winner = winningPlayer;\r\n      console.log(\"GAME OVER CALLLED \" + winningPlayer);\r\n    },\r\n    handleDraw() {\r\n      this.winner = \"draw\";\r\n    },\r\n    resetGame() {\r\n      this.winner = null;\r\n      this.resetSignal = true;\r\n      this.firstPlayer = DEFAULT_FIRST_PLAYER;\r\n      this.secondPlayer = DEFAULT_SECOND_PLAYER;\r\n    },\r\n    finishReset() {\r\n      this.resetSignal = false;\r\n    }\r\n  },\r\n  computed: {\r\n    outcomeText() {\r\n      let winnerNameDisplay = \"\";\r\n\r\n      if (this.winner === this.firstPlayer) {\r\n        winnerNameDisplay = this.playerOneName;\r\n      } else {\r\n        winnerNameDisplay = this.playerTwoName;\r\n      }\r\n\r\n      return `${winnerNameDisplay} has won!`;\r\n    },\r\n  },\r\n  mounted() {\r\n    if (PLAYER_ONE_STORAGE_KEY in sessionStorage) {\r\n      this.playerOneName = sessionStorage.getItem(PLAYER_ONE_STORAGE_KEY);\r\n    }\r\n    if (PLAYER_TWO_STORAGE_KEY in sessionStorage) {\r\n      this.playerTwoName = sessionStorage.getItem(PLAYER_TWO_STORAGE_KEY);\r\n    }\r\n    connectSocket();\r\n  },\r\n  unmounted() {\r\n    disconnectSocket();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.board {\r\n  width: fit-content;\r\n  height: fit-content;\r\n  align-self: center;\r\n}\r\n\r\n.outcome-display {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: row;\r\n}\r\n\r\n.player-controls {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n}\r\n\r\n#player-one-symbol,\r\n#player-two-symbol {\r\n  text-align: center;\r\n}\r\n\r\n.reset-button {\r\n  margin-left: 2rem;\r\n}\r\n</style>\r\n","<template>\r\n  <!-- Player 1 clock -->\r\n  <div>\r\n    <!-- <div class=\"clock-container\" id=\"first-clock\" :class=\"{ activeClock: isPlayerTurn }\">\r\n\t\t\t<player-timer :start-time-seconds=\"startTimeSeconds\" :is-enabled=\"playerOneTurn\" :owner=\"playerOne\"\r\n\t\t\t\t:reset-signal=\"resetSignal\" @time-loss=\"handleTimeLoss($event)\">\r\n\t\t\t</player-timer>\r\n\t\t</div> -->\r\n    <div class=\"meta-board\">\r\n      <GameBoard v-for=\"gameState of metaGameState\" :key=\"gameState.id\" @tile-placed=\"placeTile($event, true)\"\r\n        @game-over=\"setBoardStatus($event)\" @draw=\"setBoardStatus($event)\" :opponent-player-symbol=\"opponentSymbol\"\r\n        :opponent-move=\"opponentMove\" :client-player-symbol=\"playerSymbol\" :reset-signal=\"resetSignal\"\r\n        :is-enabled=\"gameState.isEnabled\" :board-id=\"gameState.id\" class=\"game-board\">\r\n      </GameBoard>\r\n    </div>\r\n    <!-- Player 2 clock -->\r\n    <!-- <div class=\"clock-container\" id=\"second-clock\" :class=\"{ activeClock: !playerOne }\">\r\n\t\t\t<player-timer :start-time-seconds=\"startTimeSeconds\" :is-enabled=\"!playerOneTurn\" :owner=\"playerTwo\"\r\n\t\t\t\t:reset-signal=\"resetSignal\" @time-loss=\"handleTimeLoss($event)\">\r\n\t\t\t</player-timer>\r\n\t\t</div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GameBoard from './GameBoard.vue';\r\n// import PlayerTimer from './PlayerTimer.vue';\r\n\r\nimport { sendMove, state, socket, initializeClient, processNewMove } from \"../../socket.js\";\r\n\r\nimport {\r\n  NUM_BOARDS, CONTINUE, DRAW, PLAYER_ONE_STORAGE_KEY, PLAYER_START_TIME, RESET,\r\n  // WAIT_FOR_OTHER_PLAYER, RESETTED\r\n} from \"@/constants.mjs\";\r\n// import { sendMove, receiveMove } from '@/socket';\r\n\r\nconst startTimeSeconds = PLAYER_START_TIME;\r\n\r\nexport default {\r\n  components: {\r\n    GameBoard,\r\n    // PlayerTimer,\r\n  },\r\n  emits: [\r\n    \"game-over\",\r\n    \"resetted\",\r\n    \"draw\",\r\n  ],\r\n  props: {\r\n    playerOne: { required: true, type: String },\r\n    playerTwo: { required: true, type: String },\r\n    resetSignal: { default: false, type: Boolean },\r\n  },\r\n  data() {\r\n    let metaGameState = [];\r\n    let endGameStates = [DRAW, this.playerOne, this.playerTwo];\r\n\r\n    for (let i = 0; i < NUM_BOARDS; i++) {\r\n      metaGameState.push({\r\n        id: i,\r\n        isEnabled: true,\r\n        status: CONTINUE, // playerOne/two win, draw, continue\r\n      });\r\n    }\r\n    let opponentMove = {\r\n      tileId: -1,\r\n      boardId: -1,\r\n    };\r\n    return {\r\n      metaGameState,\r\n      endGameStates,\r\n      startTimeSeconds,\r\n      opponentMove,\r\n      opponentKey: \"\",\r\n      opponentSymbol: \"\",\r\n      isPlayerTurn: false,\r\n      playerStorageKey: \"\",\r\n      playerSymbol: \"\",\r\n      boardsInPlay: NUM_BOARDS,\r\n      serverGameState: state,\r\n      currentGameState: null,\r\n      nextBoardToPlay: -1,\r\n    }\r\n  },\r\n  methods: {\r\n    // sets enable status, sends move if isNativePlacement, \r\n    // 2 cases where tiles are placed \r\n    // 1. isNative, this client plays a move\r\n    // 2. server plays a move\r\n    placeTile({ tileId, boardId }, isNativePlacement) {\r\n      this.nextBoardToPlay = Number(tileId);\r\n\r\n      let nextBoard = this.metaGameState[this.nextBoardToPlay];\r\n\r\n      // this is wack, excess computation, but it looks nice lol\r\n      // if next board to play has ended already, enable all, else, set enable \r\n      // status of next board\r\n      this.setAllBoardEnableStatus(true);\r\n      console.log(\"meta board. nextboard status: \" + nextBoard.status);\r\n      if (!this.endGameStates.includes(nextBoard.status)) {\r\n        for (let board = 0; board < this.metaGameState.length; board++) {\r\n          this.metaGameState[board].isEnabled = this.nextBoardToPlay === board;\r\n        }\r\n      }\r\n\r\n      console.log(\"Sending move\");\r\n      if (isNativePlacement) {\r\n        sendMove(this.playerStorageKey, tileId, boardId);\r\n        this.isPlayerTurn = false;\r\n      }\r\n\r\n      // just played, other players turn, can't move until we receive new info\r\n      if (!this.isPlayerTurn && isNativePlacement) {\r\n        this.setAllBoardEnableStatus(false);\r\n      }\r\n    },\r\n    setBoardStatus(boardInfo) {\r\n      let board = Number(boardInfo.boardId);\r\n      this.metaGameState[board].status = boardInfo.status;\r\n      this.boardsInPlay--;\r\n\r\n      const potentialEndState = this.getWinner(this.boardsInPlay);\r\n      if (this.endGameStates.includes(potentialEndState)) {\r\n        // debugger; // eslint-disable-line no-debugger\r\n        this.setAllBoardEnableStatus(false);\r\n        this.setEndGameStatus(potentialEndState);\r\n      }\r\n    },\r\n    getWinner(boardsInPlay) {\r\n      if (boardsInPlay === 0) {\r\n        return DRAW;\r\n      }\r\n\r\n      let winningCombinations = [\r\n        [0, 1, 2], // row wins\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6], // column wins\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8], // diagonal wins\r\n        [2, 4, 6]\r\n      ];\r\n\r\n      for (const combo of winningCombinations) {\r\n        let isWinning = false;\r\n        let originalOwner = this.metaGameState[combo[0]].status;\r\n        for (let comboIndex = 0; comboIndex < combo.length; comboIndex++) {\r\n          let currentOwner = this.metaGameState[combo[comboIndex]].status;\r\n          isWinning = currentOwner === originalOwner;\r\n          if (!isWinning) {\r\n            break;\r\n          }\r\n        }\r\n        if (isWinning) {\r\n          return originalOwner;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    handleTimeLoss(timerOwner) {\r\n      if (timerOwner === this.playerOne) {\r\n        this.setEndGameStatus(this.playerTwo); // player 2's win\r\n      } else if (timerOwner === this.playerTwo) {\r\n        this.setEndGameStatus(this.playerOne); // player 1's win\r\n      }\r\n      this.setAllBoardEnableStatus(false);\r\n    },\r\n    setEndGameStatus(newStatus) {\r\n      this.currentGameState = newStatus;\r\n    },\r\n    setAllBoardEnableStatus(enableStatus) {\r\n      for (const boardState of this.metaGameState) {\r\n        boardState.isEnabled = enableStatus;\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    currentGameState: function (newEndState) {\r\n      if (newEndState !== null) {\r\n        const eventToEmit = newEndState === DRAW ? DRAW : \"game-over\";\r\n        this.$emit(eventToEmit, newEndState);\r\n      }\r\n    },\r\n    resetSignal: function (newReset) {\r\n      if (newReset) {\r\n        // debugger; // eslint-disable-line no-debugger\r\n        for (const board of this.metaGameState) {\r\n          board.status = CONTINUE;\r\n          board.isEnabled = true;\r\n        }\r\n        this.playerOneTurn = this.playerStorageKey === PLAYER_ONE_STORAGE_KEY;\r\n        this.boardsInPlay = NUM_BOARDS;\r\n        this.nextBoardToPlay = -1;\r\n        socket.emit(RESET);\r\n        this.setEndGameStatus(null);\r\n        this.$emit(\"resetted\");\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    initializeClient(this);\r\n    processNewMove(this);\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.game-board {\r\n  border: solid;\r\n  border-color: paleturquoise;\r\n}\r\n\r\n.meta-board {\r\n  /* width: 60rem;\r\n\theight: 60rem; */\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n}\r\n\r\n#second-clock {\r\n  display: flex;\r\n  justify-content: right;\r\n}\r\n</style>","<template>\r\n  <div class=\"board-container\">\r\n    <div class=\"game-board\" :class=\"{ active: isEnabled }\">\r\n      <game-tile v-for=\"tile in GameBoard\" :key=\"tile.id\" \r\n        :ownerSymbol=\"tile.owner\" :id=\"tile.id\" \r\n        @place-tile=\"placeTile(tile.id, true)\">\r\n      </game-tile>\r\n    </div>\r\n    <div v-if=\"winner !== null\" class=\"end-display\">\r\n      {{ winner }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GameTile from './GameTile.vue';\r\n\r\nimport { NUM_TILES_PER_BOARD } from \"@/constants.mjs\";\r\n\r\nconst DRAW = \"D\";\r\n\r\nexport default {\r\n  components: {\r\n    GameTile,\r\n  },\r\n  emits: [\r\n    \"tile-placed\",\r\n    \"game-over\",\r\n    \"resetted\",\r\n  ],\r\n  props: {\r\n    // firstPlayer: { required: true, type: Object }, \r\n    // secondPlayer: { required: true, type: Object }\r\n    clientPlayerSymbol: { required: true, type: String }, // move id comes from event handler\r\n    opponentPlayerSymbol: { required: true, type: String },\r\n    opponentMove: { required: true, type: Object },\r\n    isEnabled: { default: false, type: Boolean },\r\n    boardId: { required: true, type: Number },\r\n    resetSignal: { default: false, type: Boolean },\r\n  },\r\n  data() {\r\n    let GameBoard = [];\r\n    for (let i = 0; i < NUM_TILES_PER_BOARD; i++) {\r\n      GameBoard.push({ owner: String(i), id: String(i) });\r\n    }\r\n\r\n    return {\r\n      GameBoard,\r\n      DRAW: DRAW,\r\n      winner: null,\r\n      tilesPlaced: 0,\r\n    }\r\n  },\r\n  methods: {\r\n    resetBoard() {\r\n      for (const tile of this.GameBoard) {\r\n        tile.owner = tile.id;\r\n      }\r\n      this.tilesPlaced = 0;\r\n      this.winner = null;\r\n    },\r\n    placeTile(tileId, nativeTilePlace) {\r\n      console.log(\"game board tile id: \" + tileId);\r\n      let selectedTile = this.GameBoard[tileId];\r\n\r\n      if (selectedTile.owner !== selectedTile.id || this.winner !== null || (!this.isEnabled && nativeTilePlace)) {\r\n        console.log(\"failed to place tile. winner: \" + this.winner + \" is enabled: \" + this.isEnabled +\r\n          \" and owner: \" + selectedTile.owner);\r\n        return;\r\n      }\r\n\r\n      this.tilesPlaced++;\r\n      selectedTile.owner = nativeTilePlace ? this.clientPlayerSymbol : \r\n                          this.opponentPlayerSymbol;\r\n\r\n      if (nativeTilePlace) {\r\n        this.$emit(\"tile-placed\", { tileId: tileId, boardId: this.boardId });\r\n      }\r\n\r\n      this.winner = this.getWinner();\r\n\r\n      if (this.winner !== null) {\r\n        this.$emit(\"game-over\", { status: this.winner, boardId: this.boardId });\r\n      }\r\n    },\r\n    getWinner() {\r\n      if (this.tilesPlaced === NUM_TILES_PER_BOARD) {\r\n        return DRAW;\r\n      }\r\n\r\n      // 2 things to deal with when placing tiles. need to listen to click place tile\r\n      // and send it to the server. and need to place tile when we receive tile from\r\n      // server. server should send: playerSymbol, playerKey, and client should place\r\n      // tile if it follows ultimate ttt rules. \r\n      // algorithm only works if every tile id isn't all the same, that's\r\n      // why this breaks when all tile owners are \"\" or equivalent. Easy plan,\r\n      // number them under the hood, but don't show the players the coordinates\r\n      let winningCombinations = [\r\n        [0, 1, 2], // row wins\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6], // column wins\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8], // diagonal wins\r\n        [2, 4, 6]\r\n      ];\r\n\r\n      for (const combo of winningCombinations) {\r\n        let isWinning = false;\r\n        let originalOwner = this.GameBoard[combo[0]].owner;\r\n        for (let comboIndex = 0; comboIndex < combo.length; comboIndex++) {\r\n          let currentOwner = this.GameBoard[combo[comboIndex]].owner;\r\n          isWinning = currentOwner === originalOwner;\r\n          if (!isWinning) {\r\n            break;\r\n          }\r\n        }\r\n        if (isWinning) {\r\n          return originalOwner;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  watch: {\r\n    resetSignal: function (newReset) {\r\n      if (newReset) {\r\n        this.resetBoard();\r\n        this.$emit(\"resetted\");\r\n      }\r\n    },\r\n    opponentMove: function (newOpponentMove) {\r\n      // this has already been pre processed by server\r\n      // guaranteed to be valid move\r\n      console.log(\"new opponent move: \" + JSON.stringify(newOpponentMove));\r\n      const { tileId, boardId } = newOpponentMove;\r\n      if (boardId !== this.boardId) {\r\n        return;\r\n      }\r\n      this.placeTile(Number(tileId), false);\r\n    }\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.active {\r\n  border: solid red;\r\n}\r\n\r\n.end-display {\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  width: 9rem;\r\n  height: 9rem;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  text-align: center;\r\n  font-size: 8rem;\r\n  color: red;\r\n}\r\n\r\n.game-board {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n  margin: 0px 0px 0px 0px;\r\n  width: 9rem;\r\n  height: 9rem;\r\n  position: relative;\r\n}\r\n\r\n.board-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0px 0px 0px 0px;\r\n}\r\n</style>","<template>\r\n  <div class=\"tile\" @click=\"setOwner\">\r\n    {{ displaySymbol }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst EMPTY_TILE = \"\";\r\n\r\nexport default {\r\n  emits: [\r\n    \"place-tile\",\r\n  ],\r\n  props: {\r\n    ownerSymbol: { required: true, type: String },\r\n    id: { required: true, type: String },\r\n    // default for game tile's owner is its id. \r\n    // width: { default: \"5\", type: Number},\r\n    // height: { default: \"5\", type: Number}\r\n  },\r\n  methods: {\r\n    setOwner() {\r\n      // if (this.ownerSymbol !== this.id || this.ownerSymbol === EMPTY_TILE) {\r\n      //     return;\r\n      // }\r\n      // if owner is default (hasn't been touched) and \r\n      const DEFAULT_OWNER = this.id;\r\n      if (this.ownerSymbol === DEFAULT_OWNER) {\r\n        this.$emit(\"place-tile\");\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    displaySymbol() {\r\n      return this.ownerSymbol === this.id ? EMPTY_TILE : this.ownerSymbol;\r\n    }\r\n  },\r\n  // computed: {\r\n  //     styleTile() {\r\n  //         return {\r\n  //             '--width': this.width + \"rem\",\r\n  //             '--height': this.height + \"rem\",\r\n  //         }\r\n  //     }\r\n  // }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.tile {\r\n  width: 2rem;\r\n  height: 2rem;\r\n  /* width: var(--height);\r\n    height: var(--width); */\r\n  border: 0.5rem solid;\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  flex-wrap: wrap;\r\n  overflow: hidden;\r\n}\r\n</style>","import { render } from \"./GameTile.vue?vue&type=template&id=2508832b&scoped=true\"\nimport script from \"./GameTile.vue?vue&type=script&lang=js\"\nexport * from \"./GameTile.vue?vue&type=script&lang=js\"\n\nimport \"./GameTile.vue?vue&type=style&index=0&id=2508832b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2508832b\"]])\n\nexport default __exports__","import { render } from \"./GameBoard.vue?vue&type=template&id=223ca7a5&scoped=true\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport \"./GameBoard.vue?vue&type=style&index=0&id=223ca7a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-223ca7a5\"]])\n\nexport default __exports__","import { render } from \"./MetaBoard.vue?vue&type=template&id=ec15f4f8&scoped=true\"\nimport script from \"./MetaBoard.vue?vue&type=script&lang=js\"\nexport * from \"./MetaBoard.vue?vue&type=script&lang=js\"\n\nimport \"./MetaBoard.vue?vue&type=style&index=0&id=ec15f4f8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ec15f4f8\"]])\n\nexport default __exports__","<template>\r\n  <footer class=\"connected-display\">{{ connectedMessage }}</footer>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { state } from '@/socket';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isConnected: state.isConnected,\r\n    }\r\n  },\r\n  computed: {\r\n    connectedMessage() {\r\n      let connectMsg = state.isConnected ? \"Connected: ✔️\" : \"Disconnected ❌\";\r\n      console.log(\"connect display connected status: \" + state.isConnected + \" and msg: \" + connectMsg);\r\n      return connectMsg;\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* footer{\r\n    width: 5rem;\r\n    height: 5rem;\r\n} */\r\n\r\n.connected-display {\r\n  width: 10rem;\r\n  height: 1rem;\r\n  /* font-size: 0.7rem; */\r\n}\r\n</style>","import { render } from \"./connectDisplay.vue?vue&type=template&id=4eeae40e&scoped=true\"\nimport script from \"./connectDisplay.vue?vue&type=script&lang=js\"\nexport * from \"./connectDisplay.vue?vue&type=script&lang=js\"\n\nimport \"./connectDisplay.vue?vue&type=style&index=0&id=4eeae40e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4eeae40e\"]])\n\nexport default __exports__","import { render } from \"./GameView.vue?vue&type=template&id=5f7bbe43&scoped=true\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=5f7bbe43&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f7bbe43\"]])\n\nexport default __exports__","<template>\r\n  <main>\r\n    <p>\r\n      Ultimate Tic Tac Toe Game!\r\n    </p>\r\n\r\n    <router-link to=\"/game\">Game</router-link>\r\n    <br>\r\n    <router-link to=\"/\">Home</router-link>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\n\r\n</script>\r\n\r\n<style></style>","import { render } from \"./AboutView.vue?vue&type=template&id=47e3ea3c\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\r\n\r\nimport HomeView from \"../views/HomeView.vue\";\r\nimport GameView from \"../views/GameView.vue\";\r\nimport AboutView from \"../views/AboutView.vue\";\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath: '/',\r\n\t\tcomponent: HomeView,\r\n\t},\r\n\t{\r\n\t\tpath: '/game',\r\n\t\tcomponent: GameView,\r\n\t}, \r\n\t{\r\n\t\tpath: '/about',\r\n\t\tcomponent: AboutView,\r\n\t}\r\n\t// {\r\n\t// \tpath: '/about',\r\n\t// \tname: 'about',\r\n\t// \t// route level code-splitting\r\n\t// \t// this generates a separate chunk (about.[hash].js) for this route\r\n\t// \t// which is lazy-loaded when the route is visited.\r\n\t// \tcomponent: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\r\n\t// }\r\n]\r\n\r\nconst router = createRouter({\r\n\thistory: createWebHistory(process.env.BASE_URL),\r\n\troutes\r\n});\r\n\r\nexport default router\r\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router/router'\r\n\r\n\r\ncreateApp(App).use(router).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktic_tac_toe_ui\"] = self[\"webpackChunktic_tac_toe_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(174); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","id","class","_createElementVNode","type","value","_createElementBlock","_hoisted_1","_createVNode","_component_router_link","to","_hoisted_2","_hoisted_3","method","onSubmit","_cache","_withModifiers","args","$options","login","$data","playerOneName","$event","name","placeholder","autocomplete","_hoisted_4","_component_RouterLink","PLAYER_ONE_STORAGE_KEY","PLAYER_TWO_STORAGE_KEY","NUM_BOARDS","NUM_TILES_PER_BOARD","CONTINUE","DRAW","PLAYER_START_TIME","INITIALIZE","NEW_MOVE","RESET","URL","state","reactive","isConnected","errorMessage","nextMove","player","tileId","gameStatus","socketOptions","autoConnect","socket","io","connectSocket","connect","console","log","disconnectSocket","disconnect","sendMove","playerKey","boardId","emit","initializeClient","metaBoardContext","on","initialData","playerSymbol","opponentSymbol","roomId","JSON","stringify","playerStorageKey","opponentKey","String","isPlayerTurn","setAllBoardEnableStatus","localStorage","setItem","processNewMove","moveInfo","moveId","nextBoardToPlay","metaGameState","isEnabled","opponentMove","placeTile","setEndGameStatus","postLogin","username","loginUrl","headers","Headers","append","fetch","mode","body","then","response","text","data","catch","error","message","getItem","previousPlayerSide","rejoinInfo","gameId","removeItem","newName","newPlayerOneName","methods","this","mounted","previousPlayerOneName","sessionStorage","unmounted","for","firstPlayer","secondPlayer","_hoisted_5","winner","_hoisted_6","_hoisted_7","_toDisplayString","outcomeText","onClick","resetGame","_hoisted_8","_component_meta_board","onGameOver","gameOver","onDraw","handleDraw","onResetted","finishReset","resetSignal","_hoisted_9","playerTwoName","_hoisted_10","_component_connect_display","_Fragment","_renderList","gameState","_component_GameBoard","key","onTilePlaced","setBoardStatus","$props","_normalizeClass","active","GameBoard","tile","_component_game_tile","ownerSymbol","owner","onPlaceTile","setOwner","displaySymbol","EMPTY_TILE","emits","props","required","DEFAULT_OWNER","$emit","computed","components","GameTile","clientPlayerSymbol","opponentPlayerSymbol","Object","default","Boolean","Number","i","push","tilesPlaced","resetBoard","nativeTilePlace","selectedTile","getWinner","status","winningCombinations","combo","isWinning","originalOwner","comboIndex","length","currentOwner","watch","newReset","newOpponentMove","startTimeSeconds","playerOne","playerTwo","endGameStates","boardsInPlay","serverGameState","currentGameState","isNativePlacement","nextBoard","includes","board","boardInfo","potentialEndState","handleTimeLoss","timerOwner","newStatus","enableStatus","boardState","newEndState","eventToEmit","playerOneTurn","connectedMessage","connectMsg","DEFAULT_FIRST_PLAYER","DEFAULT_SECOND_PLAYER","MetaBoard","ConnectDisplay","numTiles","winningPlayer","winnerNameDisplay","routes","path","component","HomeView","GameView","AboutView","router","createRouter","history","createWebHistory","process","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}